name: Rust

on:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        features:
          - ""
          - "zip"

    name: Build and Test on ${{ matrix.os }} with features '${{ matrix.features }}'
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true

      - name: Check
        run: cargo check --features "${{ matrix.features }}"
      - name: Test
        run: cargo test --features "${{ matrix.features }}"
      - name: Lint
        run: cargo clippy --all-targets --features "${{ matrix.features }}" -- -D warnings
      - name: Format
        run: cargo fmt --all -- --check
      - name: Build
        run: cargo build --release --features "${{ matrix.features }}"

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: binary-${{ matrix.os }}-features-${{ matrix.features }}
          path: target/release/
